// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChatStream_StreamType int32

const (
	ChatStream_UNSPECIFIED ChatStream_StreamType = 0
	ChatStream_JOINED      ChatStream_StreamType = 1
	ChatStream_LEAVE       ChatStream_StreamType = 2
	ChatStream_LEAVED      ChatStream_StreamType = 3
	ChatStream_SPEAK       ChatStream_StreamType = 4
	ChatStream_SPOKE       ChatStream_StreamType = 5
)

var ChatStream_StreamType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "JOINED",
	2: "LEAVE",
	3: "LEAVED",
	4: "SPEAK",
	5: "SPOKE",
}

var ChatStream_StreamType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"JOINED":      1,
	"LEAVE":       2,
	"LEAVED":      3,
	"SPEAK":       4,
	"SPOKE":       5,
}

func (x ChatStream_StreamType) String() string {
	return proto.EnumName(ChatStream_StreamType_name, int32(x))
}

func (ChatStream_StreamType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4, 0}
}

type JoinRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *JoinRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LeaveRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type SpeakRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeakRequest) Reset()         { *m = SpeakRequest{} }
func (m *SpeakRequest) String() string { return proto.CompactTextString(m) }
func (*SpeakRequest) ProtoMessage()    {}
func (*SpeakRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *SpeakRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeakRequest.Unmarshal(m, b)
}
func (m *SpeakRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeakRequest.Marshal(b, m, deterministic)
}
func (m *SpeakRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeakRequest.Merge(m, src)
}
func (m *SpeakRequest) XXX_Size() int {
	return xxx_messageInfo_SpeakRequest.Size(m)
}
func (m *SpeakRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeakRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpeakRequest proto.InternalMessageInfo

func (m *SpeakRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SpeakRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type CommonResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResponse) Reset()         { *m = CommonResponse{} }
func (m *CommonResponse) String() string { return proto.CompactTextString(m) }
func (*CommonResponse) ProtoMessage()    {}
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *CommonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResponse.Unmarshal(m, b)
}
func (m *CommonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResponse.Marshal(b, m, deterministic)
}
func (m *CommonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResponse.Merge(m, src)
}
func (m *CommonResponse) XXX_Size() int {
	return xxx_messageInfo_CommonResponse.Size(m)
}
func (m *CommonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResponse proto.InternalMessageInfo

func (m *CommonResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ChatStream struct {
	Type                 ChatStream_StreamType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.ChatStream_StreamType" json:"type,omitempty"`
	Uuid                 string                `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Msg                  string                `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ChatStream) Reset()         { *m = ChatStream{} }
func (m *ChatStream) String() string { return proto.CompactTextString(m) }
func (*ChatStream) ProtoMessage()    {}
func (*ChatStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *ChatStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatStream.Unmarshal(m, b)
}
func (m *ChatStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatStream.Marshal(b, m, deterministic)
}
func (m *ChatStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatStream.Merge(m, src)
}
func (m *ChatStream) XXX_Size() int {
	return xxx_messageInfo_ChatStream.Size(m)
}
func (m *ChatStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatStream.DiscardUnknown(m)
}

var xxx_messageInfo_ChatStream proto.InternalMessageInfo

func (m *ChatStream) GetType() ChatStream_StreamType {
	if m != nil {
		return m.Type
	}
	return ChatStream_UNSPECIFIED
}

func (m *ChatStream) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ChatStream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChatStream) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.ChatStream_StreamType", ChatStream_StreamType_name, ChatStream_StreamType_value)
	proto.RegisterType((*JoinRequest)(nil), "pb.JoinRequest")
	proto.RegisterType((*LeaveRequest)(nil), "pb.LeaveRequest")
	proto.RegisterType((*SpeakRequest)(nil), "pb.SpeakRequest")
	proto.RegisterType((*CommonResponse)(nil), "pb.CommonResponse")
	proto.RegisterType((*ChatStream)(nil), "pb.ChatStream")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x5d, 0x4f, 0xc2, 0x40,
	0x10, 0xa4, 0xa5, 0x10, 0x59, 0x08, 0x5c, 0xf6, 0xc1, 0x20, 0x4f, 0xe6, 0x9e, 0x48, 0x8c, 0xd5,
	0xa0, 0xfe, 0x00, 0x02, 0x67, 0xc2, 0x47, 0x80, 0xb4, 0xca, 0x7b, 0xd1, 0x8d, 0x10, 0x6d, 0x7b,
	0xd2, 0xab, 0x09, 0x3f, 0xc4, 0x9f, 0xe5, 0x7f, 0x32, 0x77, 0x45, 0x5b, 0x12, 0xc2, 0x53, 0xa7,
	0xb3, 0x3b, 0x9b, 0x99, 0x4e, 0x01, 0x5e, 0xd6, 0x81, 0x72, 0xe5, 0x36, 0x56, 0x31, 0xda, 0x72,
	0xc5, 0x1f, 0xa0, 0x3e, 0x8e, 0x37, 0x91, 0x47, 0x9f, 0x29, 0x25, 0x0a, 0x11, 0x9c, 0x34, 0xdd,
	0xbc, 0xb6, 0xad, 0x4b, 0xab, 0x5b, 0xf3, 0x0c, 0xd6, 0x5c, 0x14, 0x84, 0xd4, 0xb6, 0x33, 0x4e,
	0x63, 0xce, 0xa1, 0x31, 0xa5, 0xe0, 0x8b, 0x4e, 0xe8, 0xf8, 0x3d, 0x34, 0x7c, 0x49, 0xc1, 0xfb,
	0xa9, 0xdb, 0x0c, 0xca, 0x61, 0xf2, 0xb6, 0x3f, 0xad, 0x21, 0xef, 0x42, 0x73, 0x10, 0x87, 0x61,
	0x1c, 0x79, 0x94, 0xc8, 0x38, 0x4a, 0x08, 0xcf, 0xa1, 0xba, 0xa5, 0x24, 0xfd, 0x50, 0x46, 0x79,
	0xe6, 0xed, 0xdf, 0xf8, 0x8f, 0x05, 0x30, 0x58, 0x07, 0xca, 0x57, 0x5b, 0x0a, 0x42, 0xbc, 0x06,
	0x47, 0xed, 0x24, 0x99, 0xa5, 0x66, 0xef, 0xc2, 0x95, 0x2b, 0x37, 0x9f, 0xba, 0xd9, 0xe3, 0x69,
	0x27, 0xc9, 0x33, 0x6b, 0xff, 0x6e, 0xec, 0x23, 0x49, 0xcb, 0x79, 0xd2, 0x3f, 0x87, 0x4e, 0xee,
	0x70, 0x09, 0x90, 0x5f, 0xc3, 0x16, 0xd4, 0x9f, 0x67, 0xfe, 0x42, 0x0c, 0x46, 0x8f, 0x23, 0x31,
	0x64, 0x25, 0x04, 0xa8, 0x8e, 0xe7, 0xa3, 0x99, 0x18, 0x32, 0x0b, 0x6b, 0x50, 0x99, 0x8a, 0xfe,
	0x52, 0x30, 0x5b, 0xd3, 0x06, 0x0e, 0x59, 0x59, 0xd3, 0xfe, 0x42, 0xf4, 0x27, 0xcc, 0xc9, 0xe0,
	0x7c, 0x22, 0x58, 0xa5, 0xf7, 0x6d, 0x81, 0xa3, 0x1d, 0xe3, 0x15, 0x38, 0xba, 0x13, 0x6c, 0xe9,
	0x0c, 0x85, 0x76, 0x3a, 0xcd, 0xc3, 0x50, 0xbc, 0x74, 0x6b, 0xe1, 0x0d, 0x54, 0x4c, 0x13, 0xc8,
	0xf4, 0xb0, 0x58, 0x4a, 0x07, 0xcd, 0xfa, 0xc1, 0xc7, 0xe4, 0x25, 0x2d, 0x30, 0xb5, 0x64, 0x82,
	0x62, 0x43, 0xc7, 0x05, 0xab, 0xaa, 0xf9, 0x5b, 0xee, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd5,
	0xe7, 0xff, 0x3c, 0x3b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (Chat_JoinClient, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	Speak(ctx context.Context, in *SpeakRequest, opts ...grpc.CallOption) (*CommonResponse, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (Chat_JoinClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/pb.Chat/Join", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatJoinClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_JoinClient interface {
	Recv() (*ChatStream, error)
	grpc.ClientStream
}

type chatJoinClient struct {
	grpc.ClientStream
}

func (x *chatJoinClient) Recv() (*ChatStream, error) {
	m := new(ChatStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/pb.Chat/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Speak(ctx context.Context, in *SpeakRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/pb.Chat/Speak", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Join(*JoinRequest, Chat_JoinServer) error
	Leave(context.Context, *LeaveRequest) (*CommonResponse, error)
	Speak(context.Context, *SpeakRequest) (*CommonResponse, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Join(req *JoinRequest, srv Chat_JoinServer) error {
	return status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedChatServer) Leave(ctx context.Context, req *LeaveRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedChatServer) Speak(ctx context.Context, req *SpeakRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Speak not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Join_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JoinRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Join(m, &chatJoinServer{stream})
}

type Chat_JoinServer interface {
	Send(*ChatStream) error
	grpc.ServerStream
}

type chatJoinServer struct {
	grpc.ServerStream
}

func (x *chatJoinServer) Send(m *ChatStream) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chat/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Speak_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpeakRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Speak(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chat/Speak",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Speak(ctx, req.(*SpeakRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Leave",
			Handler:    _Chat_Leave_Handler,
		},
		{
			MethodName: "Speak",
			Handler:    _Chat_Speak_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Join",
			Handler:       _Chat_Join_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
