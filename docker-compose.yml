version: "3.5"

services:
  redis-cluster:
    image: grokzen/redis-cluster
    environment:
      INITIAL_PORT: 7000
      MASTERS: 3
      SLAVES_PER_MASTER: 1
    networks:
      mesh:
        aliases:
          - redis-cluster

  xds-server:
    build:
      context: ./docker/xds_server
    ports:
      - 40000:40000
    networks:
      mesh:
        aliases:
          - xds-server

  front-envoy-blue: &envoy_front
    build:
      context: ./docker/envoy
    volumes:
      - ./docker/envoy/conf:/etc/envoy
    environment:
      ENVOY_ENV: local
    networks:
      - mesh
    ports:
      - 18001-18010:8001
      - 28001-28010:9000
    depends_on:
      - xds-server
      - ap-server-blue
  front-envoy-green:
    <<: *envoy_front
    ports:
      - 19001-19010:8002
      - 29001-29010:9000
    depends_on:
      - ap-server-green

  ap-server-blue: &ap_server
    build:
      context: .
      target: develop
    volumes:
      - ./:/envoy_grpc_sample
    command: ./docker/app/start.sh
    environment: &ap_server_env
      ROLE: local
      ROOT_PATH: /envoy_grpc_sample
      TZ: Asia/Tokyo
      PORT_NUMBER: 30001
      GOPROXY: "http://goproxy:8009"
    depends_on:
      - redis-cluster
      - goproxy
    networks:
      mesh:
        aliases:
          - ap-server
  ap-server-green:
    <<: *ap_server
    environment:
      <<: *ap_server_env
      PORT_NUMBER: 30002

  # go module proxy for access private repository
  goproxy:
    image: knocknote/goproxy
    ports:
      - 8009:8009
    entrypoint: /goproxy -cacheDir=/go -basicAuthToken=${BASIC_AUTH_TOKEN} -listen=0.0.0.0:8009
    networks:
      mesh:
        aliases:
          - goproxy

networks:
  mesh: {}
